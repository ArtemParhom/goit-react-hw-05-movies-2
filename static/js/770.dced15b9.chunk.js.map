{"version":3,"file":"static/js/770.dced15b9.chunk.js","mappings":"uNACaA,EAAaC,EAAAA,EAAAA,GAAH,6CAGVC,EAAWD,EAAAA,EAAAA,GAAH,uL,uKCARE,GAFaF,EAAAA,EAAAA,GAAH,sBACCA,EAAAA,EAAAA,GAAH,sBACOA,EAAAA,EAAAA,EAAH,iF,SCmCzB,EAhCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBP,GAFrB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,IACsB,IAAnBG,EAAQQ,QACb,wCAEA,SAAC,IAAD,UACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAC,IAAD,YACE,0BACE,uCACCD,MAEH,SAACf,EAAD,UAAegB,MALFF,EADJ,KAWlB,C,+LCnCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMvB,GAAN,yFACHgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,oBACOiB,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZK,EAAY,mCAAG,WAAMxB,GAAN,yFACHgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKM,MALc,2CAAH,sDAOZlB,EAAe,mCAAG,WAAMP,GAAN,yFACNgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Cast/Cast.module.jsx","components/Reviews/Reviews.module.jsx","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const StyledList = styled.ul`\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  font-size: 24px;\n  padding: 6px;\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n  img {\n    max-width: 180px;\n  }\n  span {\n    color: grey;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul``;\nexport const ListItem = styled.li``;\nexport const ReviewsDescr = styled.p`\n  font-size: 18px;\n  color: #000;\n  margin-top: 6px;\n`;\n","import { ListItem, StyledList } from 'components/Cast/Cast.module';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewsMovie } from 'services/getMovies';\nimport { ReviewsDescr } from './Reviews.module';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const Reviews = await getReviewsMovie(movieId);\n        setReviews(Reviews);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return reviews.length === 0 ? (\n    <h3>no reviews</h3>\n  ) : (\n    <StyledList>\n      {reviews.map(({ id, author, content }) => (\n        <ListItem key={id}>\n          <p>\n            <span>author: </span>\n            {author}\n          </p>\n          <ReviewsDescr>{content}</ReviewsDescr>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7d51bd4cd1a81d0d037e61ce8dd36782';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["StyledList","styled","ListItem","ReviewsDescr","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviewsMovie","Reviews","console","log","length","map","id","author","content","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","getCastMovie","cast"],"sourceRoot":""}